apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.bugsnag.android.gradle'

def config = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion config.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    def secretsFiles = rootProject.file("secrets.properties")
    def secrets = new Properties()
    if (secretsFiles.exists()) secrets.load(new FileInputStream(secretsFiles))

    bugsnag {
        enabled = !rootProject.isCiBuild
        uploadJvmMappings = !rootProject.isCiBuild
        reportBuilds = !rootProject.isCiBuild
    }

    defaultConfig {
        applicationId "com.marverenic.music"
        minSdkVersion 16
        targetSdkVersion config.targetSdkVersion
        versionCode 40400
        versionName "3.1 Beta 1"
        resConfigs "en", "es", "nl"
        multiDexEnabled true

        buildConfigField 'String', 'BUGSNAG_API_KEY', "\"${secrets.getProperty('bugsnagKey', 'null')}\""
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true

            buildConfigField 'Boolean', 'BUGSNAG_ENABLED', 'true'
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '.debug'

            buildConfigField 'Boolean', 'BUGSNAG_ENABLED', 'false'
        }
    }

    flavorDimensions "implementation"
    productFlavors {
        hathor {
            dimension "implementation"
        }

        marketing {
            dimension "implementation"
            applicationIdSuffix ".demo"
            versionNameSuffix ".demo"
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }
}

androidExtensions {
    // Disable Kotlin synthetic views
    features = ["parcelize"]
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation config.deps.kotlin.stdlib

    // Androidx
    implementation config.deps.androidx.core
    implementation config.deps.androidx.ktx
    implementation config.deps.androidx.multidex
    implementation config.deps.androidx.annotation
    implementation config.deps.androidx.fragment
    implementation config.deps.androidx.material
    implementation config.deps.androidx.media
    implementation config.deps.androidx.palette
    implementation config.deps.androidx.preference
    implementation config.deps.androidx.recyclerView
    implementation config.deps.androidx.cardView
    implementation config.deps.androidx.constraintLayout
    implementation config.deps.androidx.coordinatorLayout
    implementation config.deps.androidx.drawerLayout
    implementation config.deps.androidx.swipeRefreshLayout

    // Dagger
    implementation config.deps.dagger.runtime
    kapt config.deps.dagger.compiler

    // RxJava
    implementation config.deps.rxJava.core
    implementation config.deps.rxJava.android
    implementation config.deps.rxJava.lifecycle
    implementation config.deps.rxJava.lifecycleExtras
    implementation config.deps.rxJava.permissions
    implementation config.deps.rxJava.lint

    // Retrofit
    implementation config.deps.retrofit.core
    implementation config.deps.retrofit.gson
    implementation config.deps.retrofit.rxJava

    // Room
    implementation config.deps.room.runtime
    kapt config.deps.room.compiler
    testImplementation config.deps.room.test

    // ExoPlayer
    implementation config.deps.exoplayer.core
    implementation project(':exoplayer-flac')

    // Glide
    implementation config.deps.glide.core

    // GSON
    implementation config.deps.gson.core

    // Additional Views
    implementation config.deps.views.heterogeneousadapter
    implementation config.deps.views.recyclerviewFastscroll
    implementation config.deps.views.verticalseekbar
    implementation project(':seekarc')

    // Logging
    implementation config.deps.timber.core

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.2.1'

    implementation 'com.bugsnag:bugsnag-android:5.2.3'
}
